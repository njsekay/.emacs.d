(define-key mode-specific-map (kbd "C-c S-s") 'my-start-player)
(require 'emms-source-file)
(require 'emms-player-mpd)
(require 'emms-playing-time)
(require 'emms-playlist-mode)
(require 'emms-mode-line-icon)
(require 'emms-streams)
(require 'emms-stream-info)
(require 'emms-volume)


;; (setq exec-path (append exec-path '("/usr/local/bin")))
;; (add-to-list 'load-path "~/.emacs.d/site-lisp/emms/lisp")
(require 'emms-setup)
(require 'emms-player-mplayer)
(emms-standard)
(emms-default-players)
(emms-devel)
(emms-mode-line 1)
(emms-playing-time 1)

(setq emms-repeat-playlist t)
(setq emms-player-list '(emms-player-mplayer))
(setq emms-source-file-default-directory "/treasure/music/")

(emms-player-set emms-player-mpd 'regex
                 "\\.ogg\\|\\.mp3\\|\\.wma\\|\\.ogm\\|\\.asf\\|\\.mkv\\|http://\\|mms://\\|\\.rmvb\\|\\.flac\\|\\.vob\\|\\.m4a\\|\\.ape\\|\\.mpc")
(emms-player-set emms-player-mplayer 'regex
                 "\\.wav\\|\\.pls+\\|\\.mpg\\|\\.mpeg\\|\\.wmv\\|\\.wma\\|\\.mov\\|\\.avi\\|\\.divx\\|\\.ogm\\|\\.asf\\|\\.mkv\\|.rm\\|\\.rmvb\\|\\.mp4|\\.rm")

(define-emms-simple-player mplayer '(file url)
      (regexp-opt '(".ogg" ".mp3" ".wav" ".mpg" ".mpeg" ".wmv" ".wma"
                    ".mov" ".avi" ".divx" ".ogm" ".asf" ".mkv" "http://" "mms://"
                    ".rm" ".rmvb" ".mp4" ".flac" ".vob" ".m4a" ".flv" ".ogv" ".pls"))
      "mplayer" "-slave" "-quiet" "-really-quiet" "-fullscreen")

(define-emms-combined-source all nil
  '((emms-source-directory emms-source-file-default-directory)))

(setq emms-playlist-buffer-name "*music*")
;; (setq emms-playlist-buffer "mpd")

;;;###autoload
(defun rgr/track-search()
  (interactive)
  (anything (list anything-c-source-emms-file anything-c-source-emms-directory anything-c-source-emms-playlist)  nil  "Video or even some music Sir? ")
  )

(defadvice rgr/track-search (after rgr/track-search) (run-at-time "2 sec" nil 'emms-player-mpd-connect))


;;(add-hook 'emms-player-started-hook 'emms-player-mpd-connect)
(setq emms-show-format "EMMS is now playing : %s")

;; get list back from mpd for proper formatting
;; (defadvice emms-play-file (after emms-play-file activate)
;;     (emms-player-mpd-connect))

                                        ; (emms-lyrics 1)
                                        ; (emms-lyrics-ena1ble)

(emms-playing-time 1)
(emms-mode-line 1)

(require 'emms-extension)
(ad-unadvise 'emms-play-directory-tree)

;; global key-map
;; all global keys prefix is C-c e
;; compatible with emms-playlist mode keybindings
;; you can view emms-playlist-mode.el to get details about 
;; emms-playlist mode keys map
(global-set-key (kbd "C-c e M") 'de-add-dir)
(global-set-key (kbd "C-c e s") 'emms-stop)
(global-set-key (kbd "C-c e SPC") 'emms-pause)
(global-set-key (kbd "C-c e n") 'emms-next)
(global-set-key (kbd "C-c e p") 'emms-previous)
(global-set-key (kbd "C-c e f") 'emms-show)
(global-set-key (kbd "C-c e >") 'emms-seek-forward)
(global-set-key (kbd "C-c e <") 'emms-seek-backward)
;; these keys maps were derivations of above keybindings
(global-set-key (kbd "C-c e x") 'emms-start)
(global-set-key (kbd "C-c e g") 'emms-playlist-mode-go)
(global-set-key (kbd "C-c e t") 'emms-play-directory-tree)
(global-set-key (kbd "C-c e h") 'emms-shuffle)
(global-set-key (kbd "C-c e e") 'emms-play-file)
(global-set-key (kbd "C-c e l") 'emms-play-playlist)
(global-set-key (kbd "C-c e r") 'emms-toggle-repeat-track)
(global-set-key (kbd "C-c e R") 'emms-toggle-repeat-playlist)
(global-set-key (kbd "C-c e u") 'emms-score-up-playing)
(global-set-key (kbd "C-c e d") 'emms-score-down-playing)
(global-set-key (kbd "C-c e o") 'emms-score-show-playing)
(global-set-key (kbd "C-c e a") 'emms-add-directory-tree)
(global-set-key (kbd "C-c e +") 'emms-volume-raise)
(global-set-key (kbd "C-c e -") 'emms-volume-lower)
;; (global-set-key "\C-xM" 'de-add-dir)

;; playlist-mode-map
(define-key emms-playlist-mode-map (kbd "SPC") 'emms-pause)
(define-key emms-playlist-mode-map (kbd "+") 'emms-volume-raise)
(define-key emms-playlist-mode-map (kbd "-") 'emms-volume-lower)
;; (define-key emms-playlist-mode-map (kbd "<right>") (lambda () (interactive) (emms-seek +10)))
;; (define-key emms-playlist-mode-map (kbd "<left>") (lambda () (interactive) (emms-seek -10)))
;; (define-key emms-playlist-mode-map (kbd "<up>") (lambda () (interactive) (emms-seek +60)))
;; (define-key emms-playlist-mode-map (kbd "<down>") (lambda () (interactive) (emms-seek -60)))
;; (define-key emms-playlist-mode-map (kbd "S u") 'emms-score-up-file-on-line)
;; (define-key emms-playlist-mode-map (kbd "S d") 'emms-score-down-file-on-line)
;; (define-key emms-playlist-mode-map (kbd "S o") 'emms-score-show-file-on-line)
;; (define-key emms-playlist-mode-map (kbd "S l") 'emms-score-less-tolerant)
;; (define-key emms-playlist-mode-map (kbd "S m") 'emms-score-more-tolerant)
;; (define-key emms-playlist-mode-map (kbd "S t") 'emms-score-set-tolerance)

(define-key emms-playlist-mode-map (kbd "i") 'emms-score-show-playing)
(define-key emms-playlist-mode-map (kbd "f") 'emms-playlist-limit-to-info-artist)
(define-key emms-playlist-mode-map (kbd "a") 'emms-playlist-limit-to-all)

;; (define-key emms-playlist-mode-map (kbd "<F3>") 'my-emms-play-default)
;; (define-key emms-playlist-mode-map (kbd "<F4>") 'emms-play-directory)
(define-key emms-playlist-mode-map (kbd "R") 'de-add-dir)
;; (define-key emms-playlist-mode-map (kbd "<F6>") 'emms-play-directory-tree)
;; (define-key emms-playlist-mode-map (kbd "<F7>") 'emms-previous)
;; (define-key emms-playlist-mode-map (kbd "<F8>") 'emms-next)
;; (define-key emms-playlist-mode-map (kbd "<F9>") 'my-emms-google-for-lyrics)
(define-key emms-playlist-mode-map (kbd "n") 'emms-next)
(define-key emms-playlist-mode-map (kbd "p") 'emms-previous)
(define-key emms-playlist-mode-map (kbd "S h") 'emms-shuffle)
(define-key emms-playlist-mode-map (kbd "S s") 'emms-playlist-sort-by-info-artist)


;; (defun update-playlist
;;   (interactive)
;;   (emms-add-directory-tree emms-source-file-default-directory))

(defun de-add-dir ()
  "Switch to the current emms-playlist buffer, use
emms-playlist-mode and query for a directory tree to add to the
playlist."
  (interactive)
  ;; (when (not (condition-case nil (emms-playlist-first) )) (emms-playlist-clear))
  (emms-add-directory-tree emms-source-file-default-directory)
  (emms-playlist-mode-go)
  (emms-playlist-sort-by-info-artist))


;; (defun oni:emms-toggle-playing ()
;;   "Toggle between playing/paused states."
;;   (interactive)
;;   (if (eq emms-player-playing-p nil)
;;       (emms-start)
;;     (emms-pause)))

(eval-after-load "emms-source-file"
      '(progn
         (require 'emms-setup)

         (emms-standard)
         (require 'emms-player-mpd)

         (setq emms-player-mpd-server-name "localhost")
         (setq emms-player-mpd-server-port "6600")

         (add-to-list 'emms-info-functions 'emms-info-mpd)
         (add-to-list 'emms-player-list 'emms-player-mpd)
         (setq emms-player-mpd-music-directory "/treasure/music")))

(setq emms-source-file-default-directory "/treasure/music/")

(global-set-key [XF86AudioNext] 'emms-next)
(global-set-key [XF86AudioPlay] 'oni:emms-toggle-playing)
(global-set-key [XF86AudioPrev] 'emms-previous)
(global-set-key [XF86AudioStop] 'emms-stop)
(global-set-key [XF86Tools] 'emms)
;; (require 'emms-player-mpd)

;; (setq emms-player-mpd-supported-regexp 
;;       (concat "\\`http://\\|" 
;;               (emms-player-simple-regexp 
;;                "m3u" "ogg" "flac" "mp3" "wav" "mod" "au" "aiff")))

;; (emms-player-set emms-player-mpd
;;                  'regex
;;                  emms-player-mpd-supported-regexp)

(emms-add-directory-tree emms-source-file-default-directory)
